name: Build RimWorld Mod DLL

################################################################################
# Paths – change only if you move folders around
################################################################################
env:
  MOD_SRC_PATH: Source/1.6            # folder that contains the .csproj
  DLL_DEST_PATH: 1.6/Assemblies       # final DLL location (repo-root/1.6/Assemblies)
  ARTIFACT_NAME: MyMenuButtonModDLL

################################################################################
# Run on pushes and PRs (ignore README edits)
################################################################################
on:
  push:
    branches: [ main, master ]
    paths-ignore:
      - 'README.md'
  pull_request:

################################################################################
# Job: compile on Windows ➜ copy DLL ➜ upload artifact
################################################################################
jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1️⃣ Check out code
      - name: Check out repository
        uses: actions/checkout@v4

      # 2️⃣ Install .NET SDK 8 (includes .NET Framework ref-packs)
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # 3️⃣ Restore NuGet packages
      - name: Restore packages
        run: dotnet restore "${{ env.MOD_SRC_PATH }}"

      # 4️⃣ Build in Release mode (standard output path)
      - name: Build (Release)
        run: dotnet build "${{ env.MOD_SRC_PATH }}" --configuration Release --no-restore

      # 5️⃣ Copy the built DLL(s) into repo-root/1.6/Assemblies/
      - name: Copy DLL to mod folder
        shell: pwsh
        run: |
          $dest = "$(pwd)/${{ env.DLL_DEST_PATH }}"
          New-Item -ItemType Directory -Force -Path $dest | Out-Null
          Get-ChildItem -Path "${{ env.MOD_SRC_PATH }}\bin\Release" -Filter *.dll -Recurse |
            Where-Object { $_.FullName -notmatch '\\ref\\' } |           # skip reference DLLs
            Copy-Item -Destination $dest -Force
          Write-Host "Copied DLL(s) to $dest"

      # 6️⃣ Upload the DLL(s) as a build artifact
      - name: Upload DLL artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.DLL_DEST_PATH }}/*.dll
